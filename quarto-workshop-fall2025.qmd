---
title: Writing Reproducible Reports and Articles with Quarto
author:
  - name: Christopher T. Kenny
    affiliations:
      - name: Data-Driven Social Science
date: 2025-10-20
format:
  projector-typst:
    keep-typ: false
bullet-incremental: true
toc: true
toc-title: "Today's Plan"
handout: false
theme: princeton.typ
mainfont: Libre Franklin
fontsize: 16pt
---

# What is Quarto?

## Quarto

- Publishing system based on Pandoc
    - Input a markdown document, render to anything supported by Pandoc
        - HTML, PDF, Word, Beamer, GFM, MediaWiki, etc.
- Built by Posit, PBC (formerly RStudio)
- Syntax builds on RMarkdown, but language agnostic
    - Existing `.Rmd` files and most Jupyter notebooks can be run by Quarto
- Reproducible system to combine code and text together


## Rendering Behind-the-Scenes

```{=typst}
#set align(horizon + center)
```


![](figs/rstudio-qmd-how-it-works.png){fig-align="center" width="100%"}


Figure from <https://quarto.org/docs/faq/rmarkdown.html>

## The `.qmd` file

Two main components:

. . .

1. YAML header
    1. Specify title, authors, and frontmatter
    2. Identify output type (e.g., PDF, PowerPoint, HTML)
    3. Style the document (e.g., pick fonts `mainfont: Libre Franklin`)

. . .

2. Body
    1. Contains text
    2. Include LaTeX equations `$x^2$` becomes $x^2$
    3. Write code chunks in R, Python, Julia, Observable, etc.
    4. Include raw chunks with format-specific code (e.g., HTML or Typst blocks)

## Why Quarto?

- Common input format for many output types
- Many journal templates for general and social sciences
  - Lowers the barrier on resubmitting elsewhere
- Reproducible writing
  - Avoid copying data or hard-coding statistics
  - Place code + text together
- Write in Markdown instead of LaTeX (or Typst or HTML ...)
- Markdown formats work well with version control

## Output formats

```{=typst}
#set align(horizon)
```

- Articles: PDF (LaTeX, Typst), Word
- Slides: Beamer, RevealJS, PowerPoint
- Websites: Dashboards, Static HTML, or Shiny
- Books: PDF and HTML
- All other formats supported by Pandoc (e.g., Wiki, Markdown, JATS, InDesign, ePub)


## Selected academic journal templates

```{=typst}
#set align(horizon)
```

- General science: Science, Nature, PNAS, PLOS
- Major publishers: Taylor and Francis, Cambridge University Press, Springer, Elsevier
- Social sciences: Annual Reviews, APSR, BJPS, PA, PSRM, Perspectives, APA, and more


# Including Text, Tables, and Figures

## Writing 101 in Quarto

Quarto builds on Pandoc's flavor of Markdown

- Code blocks are fenced with backticks \` code \` becomes `code`
- Italics with `*italics*`
- Bold with `**bold**`
- Headers with `# Header Level 1`, `## Header Level 2`, etc.
- Lists with `- item` or `1. item`
- Links with `[text](url)` or `<url>`
- LaTeX math with `$math$` for inline or `$$math$$` for display
- Reference figures, tables, and sections with `@fig-label`, `@tbl-label`, and `@sec-label`
- Reference citations with `[@citation]` for parenthetical or `@citation` for prose

## Bibliographies

- Quarto supports `.bib`/`.bibtex`, CSL `.json`/`.yaml`, and  `.ris` bibliography files.
- Can be styled with CSL for all formats
- Additional customization available for LaTeX: natbib, biber, biblatex
- Can also use Pandoc's implementation of CiteProc
  - Similar to the citation system in Word

## Including figures

Basic figures can be included with `![]()` syntax:

```{=typst}
#set align(horizon + center)
```

:::: {.columns align=center totalwidth=100%}

::: {.column width="65%"}
```
![Caption](DDSS-stacked_PU_shield_black.png)
```
:::

::: {.column width="35%"}
![Caption](DDSS-stacked_PU_shield_black.png)
:::

::::

## Including Subfigures

```
::: {#fig-subfig layout-ncol=2}

![A](DDSS-stacked_PU_shield_black.png)

![B](DDSS-stacked_PU_shield_black.png)

More Captions

:::
```

::: {#fig-subfig layout-ncol=2}

![A](DDSS-stacked_PU_shield_black.png)

![B](DDSS-stacked_PU_shield_black.png)

More Captions

:::


## Making a table

Tables use "pipe" syntax:

```{=typst}
#set align(horizon + center)


```
:::: {.columns align=center totalwidth=100%}

::: {.column width="65%"}
```
| University |  Color  |
|:-----------|--------:|
| Princeton  | #E98338 |
| Harvard    | #A51C30 |
| Cornell    | #B31B1B |
| Brown      | #ED1C24 |

: Red and orange university colors {#tbl-colors}
```
:::

::: {.column width="35%"}
| University |  Color   |
|:-----------|---------:|
| Princeton  | #E98338 |
| Harvard    | #A51C30 |
| Cornell    | #B31B1B |
| Brown      | #ED1C24 |

: Red and orange university colors {#tbl-colors}
:::

::::

## Raw Content

Raw content (e.g. HTML in a webpage) can be included with a special block:

```{=typst}
#set align(horizon + center)
```
:::: {.columns align=center totalwidth=100%}

::: {.column width="50%"}

````
```{=typst}
#set text(fill: blue)
Some example text.
```
````

:::

::: {.column width="50%"}

```{=typst}
#set text(fill: blue)
Some example text.
```

:::

::::

# Including Code

## Supported Languages

Quarto supports code execution in multiple languages:

- **R**: Native support with knitr engine
- **Python**: Native support via Jupyter
- **Julia**: Support via Jupyter or new `julia` engine!
- **Observable JS**: Standalone support for interactive messages
- **Other languages**: Any language with a Jupyter kernel (e.g., Stata)
  - I have heard that this works surprisingly well!
- **Other languages**: Custom support via knitr for select languages (e.g., `rust` via `rextendr`)

## Formatting

Control code chunk behavior with options:

- `#| echo: false` - Hide code, show output only
- `#| eval: false` - Show code but don't run it
- `#| warning: false` / `message: false` - Suppress R warnings/messages
- `#| fig-width: 8` / `#| fig-height: 6` - Control figure dimensions
- `#| label: fig-myplot` - Add cross-reference labels
- `#| cache: true` - Cache expensive computations

# Quarto Extensions

## Extensions

Extend Quarto's functionality with extensions:

- **Formats**: Custom output formats (e.g., journal templates, custom PDFs)
- **Filters**: Modify document processing (e.g., add custom syntax)
- **Shortcodes**: Reusable content snippets (`{{{< video ... >}}}`, `{{{< include ... >}}}`)
- **Revealjs plugins**: Enhanced slide presentations

Install with: `quarto add username/extension-name`

## brand.yml

Centralized brand configurations

Define once, apply everywhere:

- Colors (primary, secondary, palettes)
- Typography (fonts, sizes)
- Logos and images
- Apply across HTML, PDFs, slides, websites

## brand.yml

Example: [christopherkenny/princeton-brand.yml](https://github.com/christopherkenny/princeton-brand.yml)

```
meta:
  name:
    full: Princeton University
    short: Princeton
  link:
    home: https://www.princeton.edu/
    twitter: https://x.com/Princeton
    linkedin: https://www.linkedin.com/school/princeton-university/
    facebook: https://www.facebook.com/PrincetonU/
  founded: 1746

color:
  palette:
    princeton-orange: "#e98338"
    deep-blue: "#092264"

typography:
  fonts:
    - family: "Princeton Monticello Display"
      source: file
      files:
        - path: https://drive.google.com/file/d/19HUJ52fQbbQtvuUKUV5h0hJtaf6NJIUQ
          weight: regular

logo:
  images:
    primary:
      path: assets/PU_mark.png
```

## Journal Articles

Workflow for academic writing:

1. Start with a preprint template: `quarto use template christopherkenny/ctk-article`
2. Write the paper in Markdown with embedded code
3. Switch to a journal template: `quarto use template quarto-journals/jss`
4. Add any journal-specific things to the header
5. Render to PDF: `quarto render manuscript.qmd`
6. Submit generated PDF (+ source files)
7. Get desk rejected
8. Reformat by importing next template `quarto add template christopherkenny/nature`

## Partials

- How it all works: partial files
- One core template file includes 4-15 subparts
  - Each subfile = a partial
- Edit the partials you need, use the defaults for the rest
- Partials are broken into meaningful components
  - Title, abstract, figure formatting, etc
- Easy to use formats (e.g., Typst) have simple partials
- Complex formats (e.g., HTML, LaTeX, revealjs) break out more pieces


# Academic Websites

## Demo

```{=typst}
#set align(center + horizon)
```

```
quarto create project
```

# Resources

## Quarto Documentation

```{=typst}
#set align(horizon)
```

![](figs/quarto-documentation.png){fig-align="center" height=80%}

## Extension Listings

```{=typst}
#set align(horizon)
```

:::: {.columns align=center totalwidth=100%}

::: {.column width="60%"}
![](figs/quarto-org-listing.png)
:::

::: {.column width="40%"}
![](figs/awesome-quarto.png)
:::

::::

## Things not covered today

```{=typst}
#set align(horizon)
```

Using or making filters <https://quarto.org/docs/extensions/filters.html>

. . .

Shortcodes <https://quarto.org/docs/authoring/shortcodes.html>

. . .

Interactivity: Observable or Shiny <https://quarto.org/docs/interactive/>

. . .

Making your own extensions <https://christophertkenny.com/posts/2023-07-01-creating-quarto-journal-articles/> and <https://quarto.org/docs/extensions/>

## These Slides

Written in Quarto

. . .

Using Typst + Polylux via [`christopherkenny/projector`](https://github.com/christopherkenny/projector)

. . .

Source available:

<https://github.com/christopherkenny/quarto-workshop-fall2025/blob/main/quarto-workshop-fall2025.qmd>
